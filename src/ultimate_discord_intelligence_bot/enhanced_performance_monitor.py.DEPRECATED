"""
DEPRECATED: enhanced_performance_monitor.py

This enhanced monitor was deprecated in Phase 7 (Performance Consolidation - October 2025).
All features have been migrated to AnalyticsService facade.

DEPRECATION DATE: October 19, 2025
REMOVAL TARGET: After Phase 7 validation (Week 12)
DO NOT ADD NEW CODE TO THIS FILE.

=============================================================================
MIGRATION GUIDE
=============================================================================

EnhancedPerformanceMonitor provided real-time monitoring and alerting.
Use AnalyticsService for unified interface:

BEFORE (enhanced_performance_monitor.py):
```python
from ultimate_discord_intelligence_bot.enhanced_performance_monitor import (
    EnhancedPerformanceMonitor
)

monitor = EnhancedPerformanceMonitor()
quality = await monitor.real_time_quality_assessment(response, context)
dashboard_data = await monitor.generate_real_time_dashboard_data()
comparative = monitor.generate_comparative_analysis(agent_names)
```

AFTER (Use AnalyticsService):
```python
from ultimate_discord_intelligence_bot.observability import get_analytics_service

analytics = get_analytics_service()

# Record performance with quality score
analytics.record_agent_performance(
    agent_name="my_agent",
    task_type="analysis",
    quality_score=0.87,  # Quality assessment now done in tool layer
    response_time=2.5,
    tools_used=["tool1", "tool2"]
)

# Get performance report
report_result = analytics.get_agent_performance_report("my_agent", days=30)

# Comparative analysis
comparative_result = analytics.get_comparative_agent_analysis(
    agent_names=["agent1", "agent2", "agent3"],
    days=30
)
```

=============================================================================
FEATURE MAPPING
=============================================================================

| EnhancedPerformanceMonitor                | AnalyticsService                       |
|-------------------------------------------|----------------------------------------|
| real_time_quality_assessment()            | quality_score param in record_*        |
| record_interaction_async()                | record_agent_performance()             |
| monitor_real_time_performance()           | get_agent_performance_report()         |
| generate_comparative_analysis()           | get_comparative_agent_analysis()       |
| generate_real_time_dashboard_data()       | get_system_health() + get_performance_metrics() |
| save_enhanced_report()                    | Handled by canonical monitor internally |

=============================================================================
RATIONALE
=============================================================================

- EnhancedPerformanceMonitor duplicated functionality of base AgentPerformanceMonitor
- Real-time features absorbed into AnalyticsService facade
- Quality assessment logic moved to tool/orchestration layer
- Alerting now handled by intelligent_alerts module
- Phase 7 consolidation reduces 5 monitors to 1 + facade

=============================================================================
AFFECTED COMPONENTS
=============================================================================

Known usages (to be migrated):
- tests/test_enhanced_system.py (uses PerformanceDashboard integration)
- Any custom dashboards directly instantiating EnhancedPerformanceMonitor

=============================================================================
REFERENCES
=============================================================================

- ADR-0005: Analytics Consolidation Strategy
- PHASE7_PERFORMANCE_CONSOLIDATION_COMPLETE.md
- Canonical monitor: agent_training/performance_monitor.py
- Unified facade: observability/analytics_service.py

For questions, see Phase 7 documentation.
"""

raise ImportError(
    "enhanced_performance_monitor.py is deprecated. "
    "Use observability.AnalyticsService. "
    "See this file's docstring for migration guide."
)
