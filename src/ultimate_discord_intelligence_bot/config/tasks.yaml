# Active Tasks (Implemented in crew.py)
#
# These tasks correspond to @task methods in crew.py and are actively used
# by the CrewAI system. Additional planned tasks are in future_tasks.yaml.
#
# Core workflow tasks for autonomous intelligence processing

plan_autonomy_mission:
  description: >-
    Launch or resume the end-to-end intelligence mission for {request}. Sequence
    acquisition, transcription, analysis, verification, and memory stages using the
    pipeline tool while tracking budgets and documenting key decisions.
  expected_output: Mission run log including staged plan, tool usage, and final routing instructions.
  agent: mission_orchestrator
  human_input: false
  async_execution: false
  output_file: output/mission_plan_{timestamp}.md

capture_source_media:
  description: >-
    Use the MultiPlatformDownloadTool to resolve and download the highest-quality media for {url} 
    across all supported platforms. Call MultiPlatformDownloadTool with the URL to download the video
    and capture rich metadata including file paths, formats, durations, and resolver notes.
    The tool will handle platform detection and download the content.
  expected_output: Download manifest containing file paths, formats, durations, and resolver notes.
  agent: acquisition_specialist
  human_input: false
  async_execution: true # Enable parallel execution - no dependencies
  output_file: output/download_manifest_{url_hash}.json

transcribe_and_index_media:
  description: >-
    Use the AudioTranscriptionTool to produce accurate transcripts from the downloaded media.
    Call AudioTranscriptionTool with the file path from the previous acquisition task to transcribe
    the audio content. The tool will generate searchable indices and aligned timelines for the
    captured media package.
  expected_output: Transcript bundle with timestamps, quality indicators, and index references.
  agent: transcription_engineer
  context:
    - capture_source_media
  human_input: false
  async_execution: false
  output_file: output/transcript_{url_hash}.json

map_transcript_insights:
  description: >-
    Use the EnhancedAnalysisTool and TextAnalysisTool to analyse the transcript from the previous task.
    Call EnhancedAnalysisTool with the transcript text to identify sentiment shifts, topical clusters, 
    and noteworthy excerpts. Use TextAnalysisTool to extract themes and perspectives.
    The transcript should be available from the previous transcription task.
  expected_output: Structured insight report containing themes, sentiment summary, and highlighted excerpts.
  agent: analysis_cartographer
  context:
    - transcribe_and_index_media
  human_input: false
  async_execution: false
  output_file: output/insight_map_{url_hash}.json

verify_priority_claims:
  description: >-
    Use the ClaimExtractorTool to extract factual claims from the transcript, then use FactCheckTool 
    to verify them. First call ClaimExtractorTool with the transcript text to extract key claims.
    Then call FactCheckTool for each significant claim to capture verdicts, confidence levels, 
    and supporting evidence. The transcript should be available from the transcription task.
  expected_output: Verification dossier with claim list, verdicts, fallacy notes, and citations.
  agent: verification_director
  context:
    - map_transcript_insights
  human_input: false
  async_execution: false
  output_file: output/verification_{url_hash}.json
